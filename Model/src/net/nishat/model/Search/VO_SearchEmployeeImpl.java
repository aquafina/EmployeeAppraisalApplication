package net.nishat.model.Search;

import java.sql.ResultSet;

import javax.faces.context.FacesContext;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 17 09:38:39 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VO_SearchEmployeeImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public VO_SearchEmployeeImpl() {
    }

    /**
     * Returns the bind variable value for emp_id.
     * @return bind variable value for emp_id
     */
    public String getemp_id() {
        FacesContext fctx = FacesContext.getCurrentInstance();
        HttpServletRequest req =
            (HttpServletRequest)fctx.getExternalContext().getRequest();
        HttpSession session = req.getSession();
        String hod = ((String)session.getAttribute("user_id"));
        if (hod == null) {
        
            return "";
            
        }else{
        
            return hod.trim();
        }
        
    }

    /**
     * Sets <code>value</code> for bind variable emp_id.
     * @param value value to bind as emp_id
     */
    public void setemp_id(String value) {
        setNamedWhereClauseParam("emp_id", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params,
                                             int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc,
                                                 ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * Returns the variable value for child_name.
     * @return variable value for child_name
     */
    public String getchild_name() {
        return (String)ensureVariableManager().getVariableValue("child_name");
    }

    /**
     * Sets <code>value</code> for variable child_name.
     * @param value value to bind as child_name
     */
    public void setchild_name(String value) {
        ensureVariableManager().setVariableValue("child_name", value);
    }
}
