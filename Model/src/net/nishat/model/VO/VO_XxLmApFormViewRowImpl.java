package net.nishat.model.VO;

import javax.faces.context.FacesContext;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import net.nishat.model.EO.EO_XxLmApFormImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 15 12:47:46 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VO_XxLmApFormViewRowImpl extends ViewRowImpl {
    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        FacesContext fctx = FacesContext.getCurrentInstance();
        HttpServletRequest req =
            (HttpServletRequest)fctx.getExternalContext().getRequest();
        HttpSession session = req.getSession();
        this.setEmpId((String)session.getAttribute("user_id"));
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        EmpId {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getEmpId();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setEmpId((String)value);
            }
        }
        ,
        Lmid {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getLmid();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setLmid((String)value);
            }
        }
        ,
        Attribute1 {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getAttribute1();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setAttribute1((String)value);
            }
        }
        ,
        Attribute2 {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getAttribute2();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setAttribute2((String)value);
            }
        }
        ,
        Attribute3 {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getAttribute3();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setAttribute3((String)value);
            }
        }
        ,
        Attribute4 {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getAttribute4();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setAttribute4((String)value);
            }
        }
        ,
        Attribute5 {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getAttribute5();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setAttribute5((String)value);
            }
        }
        ,
        Attribute6 {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getAttribute6();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setAttribute6((String)value);
            }
        }
        ,
        Attribute7 {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getAttribute7();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setAttribute7((String)value);
            }
        }
        ,
        LmApFormId {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getLmApFormId();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setLmApFormId((Number)value);
            }
        }
        ,
        Posted {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getPosted();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setPosted((String)value);
            }
        }
        ,
        Comments {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getComments();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        VO_LovGradingScaleForSubordinate1 {
            public Object get(VO_XxLmApFormViewRowImpl obj) {
                return obj.getVO_LovGradingScaleForSubordinate1();
            }

            public void put(VO_XxLmApFormViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(VO_XxLmApFormViewRowImpl object);

        public abstract void put(VO_XxLmApFormViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int LMID = AttributesEnum.Lmid.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int LMAPFORMID = AttributesEnum.LmApFormId.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int VO_LOVGRADINGSCALEFORSUBORDINATE1 = AttributesEnum.VO_LovGradingScaleForSubordinate1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VO_XxLmApFormViewRowImpl() {
    }

    /**
     * Gets EO_XxLmApForm entity object.
     * @return the EO_XxLmApForm
     */
    public EO_XxLmApFormImpl getEO_XxLmApForm() {
        return (EO_XxLmApFormImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for EMP_ID using the alias name EmpId.
     * @return the EMP_ID
     */
    public String getEmpId() {
        return (String) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_ID using the alias name EmpId.
     * @param value value to set the EMP_ID
     */
    public void setEmpId(String value) {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for LMID using the alias name Lmid.
     * @return the LMID
     */
    public String getLmid() {
        return (String) getAttributeInternal(LMID);
    }

    /**
     * Sets <code>value</code> as attribute value for LMID using the alias name Lmid.
     * @param value value to set the LMID
     */
    public void setLmid(String value) {
        setAttributeInternal(LMID, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @return the ATTRIBUTE1
     */
    public String getAttribute1() {
        return (String) getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1.
     * @param value value to set the ATTRIBUTE1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @return the ATTRIBUTE2
     */
    public String getAttribute2() {
        return (String) getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2.
     * @param value value to set the ATTRIBUTE2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @return the ATTRIBUTE3
     */
    public String getAttribute3() {
        return (String) getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3.
     * @param value value to set the ATTRIBUTE3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @return the ATTRIBUTE4
     */
    public String getAttribute4() {
        return (String) getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4.
     * @param value value to set the ATTRIBUTE4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @return the ATTRIBUTE5
     */
    public String getAttribute5() {
        return (String) getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5.
     * @param value value to set the ATTRIBUTE5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @return the ATTRIBUTE6
     */
    public String getAttribute6() {
        return (String) getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE6 using the alias name Attribute6.
     * @param value value to set the ATTRIBUTE6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @return the ATTRIBUTE7
     */
    public String getAttribute7() {
        return (String) getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTRIBUTE7 using the alias name Attribute7.
     * @param value value to set the ATTRIBUTE7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for LM_AP_FORM_ID using the alias name LmApFormId.
     * @return the LM_AP_FORM_ID
     */
    public Number getLmApFormId() {
        return (Number) getAttributeInternal(LMAPFORMID);
    }

    /**
     * Sets <code>value</code> as attribute value for LM_AP_FORM_ID using the alias name LmApFormId.
     * @param value value to set the LM_AP_FORM_ID
     */
    public void setLmApFormId(Number value) {
        setAttributeInternal(LMAPFORMID, value);
    }

    /**
     * Gets the attribute value for POSTED using the alias name Posted.
     * @return the POSTED
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as attribute value for POSTED using the alias name Posted.
     * @param value value to set the POSTED
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for COMMENTS using the alias name Comments.
     * @return the COMMENTS
     */
    public String getComments() {
        return (String) getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments.
     * @param value value to set the COMMENTS
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VO_LovGradingScaleForSubordinate1.
     */
    public RowSet getVO_LovGradingScaleForSubordinate1() {
        return (RowSet)getAttributeInternal(VO_LOVGRADINGSCALEFORSUBORDINATE1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
